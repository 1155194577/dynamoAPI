{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "Function1LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-typescript-template-dev-Function1"
      }
    },
    "Function2LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-typescript-template-dev-Function2"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "serverless-typescript-template",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-typescript-template-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-typescript-template-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "serverless-typescript-template",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "Function1LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-c019a9bd-fae2",
          "S3Key": "serverless/serverless-typescript-template/dev/1728486773906-2024-10-09T15:12:53.906Z/serverless-typescript-template.zip"
        },
        "Handler": "./src/lambda1.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "serverless-typescript-template-dev-Function1",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "CUSTOM_VAR": "Hello, World!",
            "NODE_OPTIONS": "--enable-source-maps"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "Function1LogGroup"
      ]
    },
    "Function2LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-c019a9bd-fae2",
          "S3Key": "serverless/serverless-typescript-template/dev/1728486773906-2024-10-09T15:12:53.906Z/serverless-typescript-template.zip"
        },
        "Handler": "./src/lambda2.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "serverless-typescript-template-dev-Function2",
        "MemorySize": 2048,
        "Timeout": 10,
        "Environment": {
          "Variables": {
            "STAGE": "dev",
            "NODE_OPTIONS": "--enable-source-maps"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "Function2LogGroup"
      ]
    },
    "Function1LambdaVersionbYGVl5ySuZHgCRYUJLkJPuhIORXqueg3bjXMcpH0hs": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "Function1LambdaFunction"
        },
        "CodeSha256": "ZEKdK+yMFHClxikMlNwaoYWyZiI0Xqw805rxBbCTogg="
      }
    },
    "Function2LambdaVersionomIBDJY6h09CNFllUwJPtJTuHUygNPlN3H7lbgVdE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "Function2LambdaFunction"
        },
        "CodeSha256": "ZEKdK+yMFHClxikMlNwaoYWyZiI0Xqw805rxBbCTogg="
      }
    },
    "Function2EventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 12 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Function2LambdaFunction",
                "Arn"
              ]
            },
            "Id": "Function2Schedule"
          }
        ]
      }
    },
    "Function2LambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "Function2LambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Function2EventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-serverless-typescript-template",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "Function1LambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "Function1LambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationFunction1": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "Function1LambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetApiFunction1": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /api/Function1",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationFunction1"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationFunction1"
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-us-east-1-c019a9bd-fae2",
      "Export": {
        "Name": "sls-serverless-typescript-template-dev-ServerlessDeploymentBucketName"
      }
    },
    "Function1LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "Function1LambdaVersionbYGVl5ySuZHgCRYUJLkJPuhIORXqueg3bjXMcpH0hs"
      },
      "Export": {
        "Name": "sls-serverless-typescript-template-dev-Function1LambdaFunctionQualifiedArn"
      }
    },
    "Function2LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "Function2LambdaVersionomIBDJY6h09CNFllUwJPtJTuHUygNPlN3H7lbgVdE"
      },
      "Export": {
        "Name": "sls-serverless-typescript-template-dev-Function2LambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-serverless-typescript-template-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-serverless-typescript-template-dev-HttpApiUrl"
      }
    }
  }
}